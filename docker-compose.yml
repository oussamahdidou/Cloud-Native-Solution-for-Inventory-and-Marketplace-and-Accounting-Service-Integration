services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672" # Port for RabbitMQ (AMQP protocol)
      - "15672:15672" # Port for RabbitMQ Management UI
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - app-network

  #############################################################
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlserver
    environment:
      SA_PASSWORD: "Coding@1234?"
      ACCEPT_EULA: "Y"
    volumes:
      - sqlserver_data:/var/opt/mssql
    ports:
      - "1433:1433"
    networks:
      - app-network

  #############################################################
  postgresql:
    image: postgres:15
    container_name: postgresql
    environment:
      POSTGRES_DB: stock
      POSTGRES_USER: stockuser
      POSTGRES_PASSWORD: stockpassword
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network

  #############################################################
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - app-network
    command: [ "redis-server", "--save", "60", "1", "--loglevel", "warning" ]
    volumes:
      - redis_data:/data

  #############################################################
  gateway:
    image: ${DOCKER_REGISTRY-}gateway
    container_name: gateway
    build:
      context: .
      dockerfile: backend/infrastructure/Gateway/Dockerfile
    ports:
      - "5000:8080"
    networks:
      - app-network
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_USER=guest
      - RABBITMQ_PASS=guest
      - REDIS_HOST=redis
    depends_on:
      - rabbitmq
      - redis

  #############################################################
  marketplaceservice.api:
    image: ${DOCKER_REGISTRY-}marketplaceserviceapi
    container_name: marketplaceservice
    build:
      context: .
      dockerfile: backend/services/MarketplaceService/src/MarketplaceService.API/Dockerfile
    ports:
      - "5001:8080"
    networks:
      - app-network
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_USER=guest
      - RABBITMQ_PASS=guest
      - DB_HOST=sqlserver
      - REDIS_HOST=redis
    depends_on:
      - sqlserver
      - rabbitmq
      - redis

  #############################################################
  usersservice:
    image: ${DOCKER_REGISTRY-}usersservice
    container_name: usersservice
    build:
      context: .
      dockerfile: backend/services/UsersService/Dockerfile
    ports:
      - "5002:8080"
    networks:
      - app-network
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_USER=guest
      - RABBITMQ_PASS=guest
      - DB_HOST=sqlserver
      - REDIS_HOST=redis
    depends_on:
      - sqlserver
      - rabbitmq
      - redis

  #############################################################
  stockservice:
    image: ${DOCKER_REGISTRY-}stockservice
    container_name: stockservice
    build:
      context: .
      dockerfile: backend/services/stockservice/Dockerfile
    ports:
      - "8080:8080"
    environment:
      - DB_HOST=postgresql
      - REDIS_HOST=redis
    networks:
      - app-network
    depends_on:
      - postgresql
      - rabbitmq
      - redis

#############################################################
networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
    name: microservices_postgres_data
  sqlserver_data:
    name: microservices_sqlserver_data
  redis_data:
    name: microservices_redis_data
